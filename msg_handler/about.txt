Задание
--
Предполагается, что данная утилита будет выполняться в фоновом режиме в устройстве со встраиваемой системой на базе ОС Linux. Данное устройство "общается" с хостом по сетевому интерфейсу.

Требования:
1. Утилита должна обрабатывать команду от хоста "Установить соединение". После установки соединения устройство шлет хосту контрольное сообщение "Ping", ожидая с таймаутом 10 секунд ответа "Pong" от хоста. В случае отсутствия ответа, устройство отключается от хоста.
2. Утилита должна обрабатывать команду от хоста "Разорвать соединение". Команда для принудительного отключения устройства от хоста.
3. Утилита должна обрабатывать команду от хоста "Получение информации об устройстве" (имя устройства, версия ОС, серийный номер, описание). Данная команда должна выполняться только при установленном соединении хоста с устройством.
4. [Опционально] Сериализацию/десериализацию данных, которыми устройство обменивается с хостом, реализовать при помощи известных средств (Flatbuffers, Protobuf или аналогичные).
5. Предполагается выполнение утилиты на С++

Как собиралось, тестировалось и замечания по реализации
--
* Не стал собирать протобаф, обошелся старым из apt
* Для сборки нужно поставить протобаф (apt install protobuf-compiler) и собрать fmtlib (https://fmt.dev/latest/index.html) у меня 10.2, но должно заработать и на старой. Далее
  * protoc --cpp_out=generated/ --python_out=generated/  message.proto
  * cd build && cmake .. && make && ./msg_handler
* Для теста можно запустить 'python3 test_client.py', оно умеет слать все сообщения из задания.
* По умолчанию утилиты используют порт 10123, но можно поменять.
* В информация об устройстве в полях серийный номер и описание - заглушки, я не очень понял, что предлагалось туда вывести.
* ping шлем периодически, хотя по тексту задания можно подумать, что надо слать один раз
* Чтоб было чуть интереснее попробовал заложиться на смену транспорта, поэтому есть базовый класс для него.
